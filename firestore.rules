rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects - users can read projects they're members of, and write if they're the owner
    match /projects/{projectId} {
      allow read: if request.auth != null && 
        (request.auth.uid in resource.data.teamMembers.keys() || 
         request.auth.uid == resource.data.createdBy);
      
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || 
         request.auth.uid in resource.data.teamMembers.keys());
      
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
    
    // Allow collection queries for projects (needed for getUserProjects)
    match /projects/{document=**} {
      allow read: if request.auth != null;
    }
    
    // Tasks - users must be members of the parent project to read/create tasks
    // Only project owner or task assignee can update tasks
    match /tasks/{taskId} {
      allow read: if request.auth != null && 
        (request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.teamMembers.keys() ||
         request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.createdBy);
      
      allow create: if request.auth != null && 
        (request.auth.uid in get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.teamMembers.keys() ||
         request.auth.uid == get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.createdBy);
      
      allow update: if request.auth != null && 
        (request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.createdBy ||
         request.auth.uid == resource.data.assignedTo);
      
      allow delete: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.createdBy;
    }
    
    // Allow collection queries for tasks (needed for getUserTasks)
    match /tasks/{document=**} {
      allow read: if request.auth != null;
    }
  }
}
